# Build stage
FROM golang:1.24 AS builder

WORKDIR /app

# Install build dependencies (Debian uses `apt` instead of `apk`)
RUN apt-get update && apt-get install -y git make gcc g++ libc6-dev

# Build args for cross-compilation
ARG TARGETOS=linux
ARG TARGETARCH=amd64
ARG CGO_ENABLED=1

# Copy the source code
COPY . .

# Build the binary with platform-specific settings
RUN CGO_ENABLED=${CGO_ENABLED} GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -o gateway

# Final stage (Debian-based runtime)
FROM debian:bookworm-slim

ENV TZ=Etc/UTC \
    ROTATION_TZ=Etc/UTC \
    DEBIAN_FRONTEND=noninteractive

RUN echo $TZ > /etc/timezone && \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
    apt-get update && \
    apt-get install -y --no-install-recommends ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Create a non-root user and group
RUN groupadd -r cligroup && useradd -r -g cligroup -m -d /home/cliuser cliuser

# Copy the binary from builder
COPY --from=builder /app/gateway /usr/local/bin/gw

# Create necessary directories with proper permissions
RUN mkdir -p /var/log/gateway /etc/gateway && \
    chown -R cliuser:cligroup /var/log/gateway /etc/gateway /usr/local/bin && \
    chmod 755 /var/log/gateway /etc/gateway && \
    chmod +x /usr/local/bin/gw

# Create a working directory for the application with proper permissions
WORKDIR /app
RUN chown -R cliuser:cligroup /app && \
    chmod 755 /app

ENV HOME=/home/cliuser
# Switch to the non-root user
USER cliuser

ENTRYPOINT ["/usr/local/bin/gw"]
