on:
  workflow_call:
    inputs:
      extra_args:
        description: Extra args for go-releaser, for example '--snapshot'
        required: false
        type: string
      version:
        description: Version of base image
        required: true
        type: string
permissions:
  contents: read
  packages: write
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: centralmind/gateway

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Build Binaries
        run: |
          # Linux builds
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o gateway-linux-amd64 .
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o gateway-linux-arm64 .
          # macOS builds
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o gateway-darwin-amd64 .
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o gateway-darwin-arm64 .
          # Windows builds
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o gateway-windows-amd64.exe .
          CGO_ENABLED=0 GOOS=windows GOARCH=arm64 go build -o gateway-windows-arm64.exe .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Images
        run: |
          # Build and push AMD64
          docker buildx build --platform linux/amd64 \
            --build-arg BINARY=gateway-linux-amd64 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.version }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            --push \
            .

          # Build and push ARM64
          docker buildx build --platform linux/arm64 \
            --build-arg BINARY=gateway-linux-arm64 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.version }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            --push \
            .

      - name: Create Binary Archives
        run: |
          # Create archives for each platform
          tar -czf gateway-linux-amd64.tar.gz gateway-linux-amd64
          tar -czf gateway-linux-arm64.tar.gz gateway-linux-arm64
          tar -czf gateway-darwin-amd64.tar.gz gateway-darwin-amd64
          tar -czf gateway-darwin-arm64.tar.gz gateway-darwin-arm64
          zip gateway-windows-amd64.zip gateway-windows-amd64.exe
          zip gateway-windows-arm64.zip gateway-windows-arm64.exe

      - name: Upload Binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./gateway-linux-amd64.tar.gz
          asset_name: gateway-linux-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload ARM64 Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./gateway-linux-arm64.tar.gz
          asset_name: gateway-linux-arm64.tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS AMD64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./gateway-darwin-amd64.tar.gz
          asset_name: gateway-darwin-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS ARM64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./gateway-darwin-arm64.tar.gz
          asset_name: gateway-darwin-arm64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows AMD64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./gateway-windows-amd64.zip
          asset_name: gateway-windows-amd64.zip
          asset_content_type: application/zip

      - name: Upload Windows ARM64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./gateway-windows-arm64.zip
          asset_name: gateway-windows-arm64.zip
          asset_content_type: application/zip
