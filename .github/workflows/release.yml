on:
  workflow_call:
    inputs:
      extra_args:
        description: Extra args for go-releaser, for example '--snapshot'
        required: false
        type: string
      version:
        description: Version of base image
        required: true
        type: string
permissions:
  contents: read
  packages: write
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: centralmind/gateway

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Build Binaries
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o gateway-amd64 .
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o gateway-arm64 .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Images
        run: |
          # Build and push AMD64
          docker buildx build --platform linux/amd64 \
            --build-arg BINARY=gateway-amd64 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.version }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            --push \
            .

          # Build and push ARM64
          docker buildx build --platform linux/arm64 \
            --build-arg BINARY=gateway-arm64 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.version }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            --push \
            .
